<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Team Member Dashboard - CollabSpace</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <style>
        :root {
            --color-primary: #1e40af;
            --color-primary-hover: #2563eb;
            --color-primary-light: #dbeafe;
            --color-success: #10b981;
            --color-warning: #f59e0b;
            --color-danger: #ef4444;
            --color-white: #ffffff;
            --color-gray-50: #f9fafb;
            --color-gray-100: #f3f4f6;
            --color-gray-200: #e5e7eb;
            --color-gray-300: #d1d5db;
            --color-gray-400: #9ca3af;
            --color-gray-500: #6b7280;
            --color-gray-600: #4b5563;
            --color-gray-700: #374151;
            --color-gray-800: #1f2937;
            --color-gray-900: #111827;
            --font-family-primary: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: var(--font-family-primary);
            background-color: var(--color-gray-50);
            color: var(--color-gray-900);
            line-height: 1.6;
        }

        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar */
        .sidebar {
            width: 280px;
            background: var(--color-white);
            border-right: 1px solid var(--color-gray-200);
            padding: 24px;
            position: fixed;
            height: 100vh;
            overflow-y: auto;
        }

        .sidebar-header {
            display: flex;
            align-items: center;
            margin-bottom: 32px;
            padding-bottom: 24px;
            border-bottom: 1px solid var(--color-gray-200);
        }

        .logo {
            display: flex;
            align-items: center;
            font-size: 20px;
            font-weight: 700;
            color: var(--color-primary);
        }

        .logo i {
            margin-right: 12px;
            font-size: 24px;
        }

        .user-info {
            display: flex;
            align-items: center;
            padding: 16px;
            background: var(--color-gray-50);
            border-radius: 12px;
            margin-bottom: 24px;
        }

        .user-avatar {
            width: 48px;
            height: 48px;
            border-radius: 50%;
            background: var(--color-success);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            margin-right: 12px;
        }

        .user-details h3 {
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 4px;
        }

        .user-role {
            font-size: 14px;
            color: var(--color-gray-600);
            background: #dcfce7;
            padding: 2px 8px;
            border-radius: 6px;
            display: inline-block;
            color: var(--color-success);
        }

        .nav-menu {
            list-style: none;
        }

        .nav-item {
            margin-bottom: 8px;
        }

        .nav-link {
            display: flex;
            align-items: center;
            padding: 12px 16px;
            color: var(--color-gray-700);
            text-decoration: none;
            border-radius: 8px;
            transition: all 0.2s ease;
        }

        .nav-link:hover,
        .nav-link.active {
            background: var(--color-primary-light);
            color: var(--color-primary);
        }

        .nav-link i {
            margin-right: 12px;
            width: 20px;
            text-align: center;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            margin-left: 280px;
            padding: 24px;
        }

        .dashboard-header {
            background: var(--color-white);
            padding: 24px;
            border-radius: 16px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            margin-bottom: 24px;
        }

        .dashboard-title {
            font-size: 28px;
            font-weight: 700;
            color: var(--color-gray-900);
            margin-bottom: 8px;
        }

        .dashboard-subtitle {
            color: var(--color-gray-600);
            font-size: 16px;
        }

        /* Stats Cards */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 24px;
            margin-bottom: 32px;
        }

        .stat-card {
            background: var(--color-white);
            padding: 24px;
            border-radius: 16px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--color-gray-200);
        }

        .stat-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 16px;
        }

        .stat-icon {
            width: 48px;
            height: 48px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            color: white;
        }

        .stat-icon.teams { background: var(--color-primary); }
        .stat-icon.tasks { background: var(--color-warning); }
        .stat-icon.completed { background: var(--color-success); }
        .stat-icon.pending { background: var(--color-danger); }

        .stat-value {
            font-size: 32px;
            font-weight: 700;
            color: var(--color-gray-900);
            margin-bottom: 4px;
        }

        .stat-label {
            color: var(--color-gray-600);
            font-size: 14px;
        }

        /* Team Discovery Section */
        .discover-teams {
            background: var(--color-white);
            padding: 24px;
            border-radius: 16px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            margin-bottom: 32px;
        }

        .section-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 20px;
        }

        .section-title {
            font-size: 20px;
            font-weight: 600;
            color: var(--color-gray-900);
        }

        .search-bar {
            display: flex;
            gap: 12px;
            margin-bottom: 24px;
        }

        .search-input {
            flex: 1;
            padding: 12px 16px;
            border: 2px solid var(--color-gray-200);
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.2s ease;
        }

        .search-input:focus {
            outline: none;
            border-color: var(--color-primary);
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        .btn-search {
            background: var(--color-primary);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .btn-search:hover {
            background: var(--color-primary-hover);
        }

        .teams-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 20px;
        }

        .team-card {
            border: 1px solid var(--color-gray-200);
            border-radius: 12px;
            padding: 20px;
            transition: all 0.2s ease;
            position: relative;
        }

        .team-card:hover {
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            border-color: var(--color-primary);
        }

        .team-header {
            display: flex;
            align-items: flex-start;
            justify-content: space-between;
            margin-bottom: 16px;
        }

        .team-name {
            font-size: 18px;
            font-weight: 600;
            color: var(--color-gray-900);
            margin-bottom: 4px;
        }

        .team-organiser {
            font-size: 14px;
            color: var(--color-gray-600);
        }

        .team-status {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
        }

        .team-status.open {
            background: #dcfce7;
            color: var(--color-success);
        }

        .team-status.closed {
            background: #fee2e2;
            color: var(--color-danger);
        }

        .team-status.joined {
            background: var(--color-primary-light);
            color: var(--color-primary);
        }

        .team-description {
            color: var(--color-gray-600);
            font-size: 14px;
            margin-bottom: 16px;
            line-height: 1.5;
        }

        .team-meta {
            display: flex;
            justify-content: space-between;
            margin-bottom: 16px;
            font-size: 14px;
            color: var(--color-gray-600);
        }

        .team-actions {
            display: flex;
            gap: 8px;
        }

        .btn-primary {
            background: var(--color-primary);
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 6px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.2s ease;
            flex: 1;
        }

        .btn-primary:hover {
            background: var(--color-primary-hover);
        }

        .btn-primary:disabled {
            background: var(--color-gray-300);
            cursor: not-allowed;
        }

        .btn-secondary {
            background: var(--color-gray-100);
            color: var(--color-gray-700);
            border: none;
            padding: 8px 16px;
            border-radius: 6px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.2s ease;
            flex: 1;
        }

        .btn-secondary:hover {
            background: var(--color-gray-200);
        }

        /* My Teams Section */
        .my-teams {
            background: var(--color-white);
            padding: 24px;
            border-radius: 16px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            margin-bottom: 32px;
        }

        .my-team-card {
            border: 1px solid var(--color-gray-200);
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 16px;
        }

        .my-team-card:last-child {
            margin-bottom: 0;
        }

        .my-team-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 12px;
        }

        .my-team-info h3 {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 4px;
        }

        .my-team-role {
            font-size: 14px;
            color: var(--color-gray-600);
        }

        .my-team-stats {
            display: flex;
            gap: 24px;
            margin-bottom: 16px;
        }

        .my-team-stat {
            text-align: center;
        }

        .my-team-stat-value {
            font-size: 20px;
            font-weight: 600;
            color: var(--color-gray-900);
        }

        .my-team-stat-label {
            font-size: 12px;
            color: var(--color-gray-600);
        }

        /* Task Section */
        .tasks-section {
            background: var(--color-white);
            padding: 24px;
            border-radius: 16px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .task-filters {
            display: flex;
            gap: 12px;
            margin-bottom: 24px;
        }

        .filter-btn {
            background: var(--color-gray-100);
            color: var(--color-gray-700);
            border: none;
            padding: 8px 16px;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .filter-btn.active {
            background: var(--color-primary);
            color: white;
        }

        .task-item {
            border: 1px solid var(--color-gray-200);
            border-radius: 8px;
            padding: 16px;
            margin-bottom: 12px;
            transition: all 0.2s ease;
        }

        .task-item:hover {
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .task-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 8px;
        }

        .task-title {
            font-size: 16px;
            font-weight: 600;
            color: var(--color-gray-900);
        }

        .task-priority {
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 500;
        }

        .task-priority.high {
            background: #fee2e2;
            color: var(--color-danger);
        }

        .task-priority.medium {
            background: #fef3c7;
            color: var(--color-warning);
        }

        .task-priority.low {
            background: #dcfce7;
            color: var(--color-success);
        }

        .task-description {
            color: var(--color-gray-600);
            font-size: 14px;
            margin-bottom: 12px;
        }

        .task-meta {
            display: flex;
            align-items: center;
            justify-content: space-between;
            font-size: 14px;
            color: var(--color-gray-600);
        }

        .task-due-date {
            display: flex;
            align-items: center;
        }

        .task-due-date i {
            margin-right: 4px;
        }

        .task-actions {
            display: flex;
            gap: 8px;
        }

        .btn-sm {
            padding: 6px 12px;
            font-size: 12px;
            border-radius: 4px;
        }

        .empty-state {
            text-align: center;
            padding: 40px;
            color: var(--color-gray-600);
        }

        .empty-state i {
            font-size: 48px;
            margin-bottom: 16px;
            color: var(--color-gray-400);
        }

        .empty-state h3 {
            font-size: 18px;
            margin-bottom: 8px;
            color: var(--color-gray-900);
        }

        /* Responsive */
        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
                transition: transform 0.3s ease;
            }

            .sidebar.mobile-open {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
            }

            .stats-grid {
                grid-template-columns: 1fr;
            }

            .teams-grid {
                grid-template-columns: 1fr;
            }

            .search-bar {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <nav class="sidebar">
            <div class="sidebar-header">
                <div class="logo">
                    <i class="fas fa-users"></i>
                    <span>CollabSpace</span>
                </div>
            </div>

            <div class="user-info">
                <div class="user-avatar">
                    M
                </div>
                <div class="user-details">
                    <h3>Member Name</h3>
                    <span class="user-role">Team Member</span>
                </div>
            </div>

            <ul class="nav-menu">
                <li class="nav-item">
                    <a href="/member-dashboard" class="nav-link active">
                        <i class="fas fa-tachometer-alt"></i>
                        <span>Dashboard</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="#discover" class="nav-link">
                        <i class="fas fa-search"></i>
                        <span>Discover Teams</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="#my-teams" class="nav-link">
                        <i class="fas fa-users"></i>
                        <span>My Teams</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="#tasks" class="nav-link">
                        <i class="fas fa-tasks"></i>
                        <span>My Tasks</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/chat" class="nav-link">
                        <i class="fas fa-comments"></i>
                        <span>Team Chat</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/profile" class="nav-link">
                        <i class="fas fa-user"></i>
                        <span>Profile</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="#" class="nav-link" onclick="logout()">
                        <i class="fas fa-sign-out-alt"></i>
                        <span>Logout</span>
                    </a>
                </li>
            </ul>
        </nav>

        <!-- Main Content -->
        <main class="main-content">
            <div class="dashboard-header">
                <h1 class="dashboard-title">Team Member Dashboard</h1>
                <p class="dashboard-subtitle">Discover teams, manage your tasks, and collaborate with others</p>
            </div>

            <!-- Stats Cards -->
            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-header">
                        <div class="stat-icon teams">
                            <i class="fas fa-users"></i>
                        </div>
                    </div>
                    <div class="stat-value" id="joinedTeams">0</div>
                    <div class="stat-label">Joined Teams</div>
                </div>

                <div class="stat-card">
                    <div class="stat-header">
                        <div class="stat-icon tasks">
                            <i class="fas fa-tasks"></i>
                        </div>
                    </div>
                    <div class="stat-value" id="assignedTasks">0</div>
                    <div class="stat-label">Assigned Tasks</div>
                </div>

                <div class="stat-card">
                    <div class="stat-header">
                        <div class="stat-icon completed">
                            <i class="fas fa-check-circle"></i>
                        </div>
                    </div>
                    <div class="stat-value" id="completedTasks">0</div>
                    <div class="stat-label">Completed Tasks</div>
                </div>

                <div class="stat-card">
                    <div class="stat-header">
                        <div class="stat-icon pending">
                            <i class="fas fa-clock"></i>
                        </div>
                    </div>
                    <div class="stat-value" id="pendingTasks">0</div>
                    <div class="stat-label">Pending Tasks</div>
                </div>
            </div>

            <!-- Discover Teams Section -->
            <div class="discover-teams" id="discover">
                <div class="section-header">
                    <h2 class="section-title">Discover Teams</h2>
                </div>
                
                <div class="search-bar">
                    <input type="text" class="search-input" id="teamSearch" placeholder="Search for teams by name, description, or organiser...">
                    <button class="btn-search" onclick="searchTeams()">
                        <i class="fas fa-search"></i>
                        Search
                    </button>
                </div>

                <div class="teams-grid" id="availableTeams">
                    <!-- Available teams will be loaded here -->
                    <div class="empty-state">
                        <i class="fas fa-search"></i>
                        <h3>Search for teams</h3>
                        <p>Use the search bar above to find teams you can join</p>
                    </div>
                </div>
            </div>

            <!-- My Teams Section -->
            <div class="my-teams" id="my-teams">
                <div class="section-header">
                    <h2 class="section-title">My Teams</h2>
                </div>

                <div id="myTeamsList">
                    <!-- User's teams will be loaded here -->
                    <div class="empty-state">
                        <i class="fas fa-users"></i>
                        <h3>No teams joined yet</h3>
                        <p>Discover and join teams to start collaborating</p>
                    </div>
                </div>
            </div>

            <!-- Tasks Section -->
            <div class="tasks-section" id="tasks">
                <div class="section-header">
                    <h2 class="section-title">My Tasks</h2>
                </div>

                <div class="task-filters">
                    <button class="filter-btn active" data-filter="all">All Tasks</button>
                    <button class="filter-btn" data-filter="pending">Pending</button>
                    <button class="filter-btn" data-filter="in-progress">In Progress</button>
                    <button class="filter-btn" data-filter="completed">Completed</button>
                </div>

                <div class="task-list" id="tasksList">
                    <!-- Tasks will be loaded here -->
                    <div class="empty-state">
                        <i class="fas fa-clipboard-list"></i>
                        <h3>No tasks assigned yet</h3>
                        <p>Join teams to get assigned tasks</p>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script>
        // Sample data - will be replaced with API calls
        let availableTeams = [];
        let myTeams = [];
        let myTasks = [];
        let stats = {
            joinedTeams: 0,
            assignedTasks: 0,
            completedTasks: 0,
            pendingTasks: 0
        };

        // Initialize dashboard
        document.addEventListener('DOMContentLoaded', function() {
            loadDashboardData();
            setupEventListeners();
        });

        function setupEventListeners() {
            // Task filter buttons
            document.querySelectorAll('.filter-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
                    this.classList.add('active');
                    filterTasks(this.dataset.filter);
                });
            });

            // Search on Enter key
            document.getElementById('teamSearch').addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    searchTeams();
                }
            });
        }

        async function loadDashboardData() {
            try {
                // Load stats
                updateStats();
                
                // Load user's teams
                await loadMyTeams();
                
                // Load user's tasks
                await loadMyTasks();
            } catch (error) {
                console.error('Error loading dashboard data:', error);
            }
        }

        function updateStats() {
            document.getElementById('joinedTeams').textContent = stats.joinedTeams;
            document.getElementById('assignedTasks').textContent = stats.assignedTasks;
            document.getElementById('completedTasks').textContent = stats.completedTasks;
            document.getElementById('pendingTasks').textContent = stats.pendingTasks;
        }

        async function searchTeams() {
            const searchTerm = document.getElementById('teamSearch').value.trim();
            
            if (!searchTerm || searchTerm.length < 2) {
                renderAvailableTeams([]);
                return;
            }

            try {
                const response = await fetch(`/api/teams/search?q=${encodeURIComponent(searchTerm)}`);
                if (response.ok) {
                    const data = await response.json();
                    availableTeams = data.data.teams || [];
                    renderAvailableTeams(availableTeams);
                } else {
                    console.error('Search failed:', response.status);
                    renderAvailableTeams([]);
                }
            } catch (error) {
                console.error('Error searching teams:', error);
                renderAvailableTeams([]);
            }
        }

        function renderAvailableTeams(teams) {
            const container = document.getElementById('availableTeams');
            
            if (teams.length === 0) {
                container.innerHTML = `
                    <div class="empty-state">
                        <i class="fas fa-search"></i>
                        <h3>No teams found</h3>
                        <p>Try searching with different keywords</p>
                    </div>
                `;
                return;
            }

            container.innerHTML = teams.map(team => {
                const organiserName = team.admin ? 
                    `${team.admin.firstName || ''} ${team.admin.lastName || ''}`.trim() || team.admin.username :
                    'Unknown';
                
                let joinButton = '';
                if (team.userStatus) {
                    if (team.userStatus.canJoin) {
                        joinButton = `<button class="btn-primary" onclick="joinTeam('${team._id}')">Join Team</button>`;
                    } else if (team.userStatus.canRequestJoin) {
                        joinButton = `<button class="btn-primary" onclick="requestToJoin('${team._id}')">Request to Join</button>`;
                    } else if (team.userStatus.hasPendingRequest) {
                        joinButton = `<button class="btn-primary" disabled>Request Pending</button>`;
                    } else if (team.userStatus.hasPendingInvitation) {
                        joinButton = `<button class="btn-primary" onclick="acceptInvitation('${team._id}')">Accept Invitation</button>`;
                    }
                } else {
                    joinButton = `<button class="btn-primary" onclick="requestToJoin('${team._id}')">Request to Join</button>`;
                }

                return `
                    <div class="team-card">
                        <div class="team-header">
                            <div>
                                <h3 class="team-name">${team.name}</h3>
                                <p class="team-organiser">by ${organiserName}</p>
                            </div>
                            <span class="team-status ${team.isPublic ? 'open' : 'closed'}">${team.isPublic ? 'Public' : 'Private'}</span>
                        </div>
                        <p class="team-description">${team.description || 'No description available'}</p>
                        <div class="team-meta">
                            <span><i class="fas fa-users"></i> ${team.memberCount || 0} members</span>
                            <span><i class="fas fa-tag"></i> ${team.type || 'General'}</span>
                        </div>
                        <div class="team-actions">
                            ${joinButton}
                            <button class="btn-secondary" onclick="viewTeamDetails('${team._id}')">
                                View Details
                            </button>
                        </div>
                    </div>
                `;
            }).join('');
        }

        async function loadMyTeams() {
            try {
                const response = await fetch('/api/teams');
                if (response.ok) {
                    const data = await response.json();
                    myTeams = data.data.teams || [];
                    
                    // Update stats
                    stats.joinedTeams = myTeams.length;
                    updateStats();
                    
                    renderMyTeams();
                } else {
                    console.error('Failed to load teams:', response.status);
                }
            } catch (error) {
                console.error('Error loading my teams:', error);
            }
        }

        function renderMyTeams() {
            const container = document.getElementById('myTeamsList');
            
            if (myTeams.length === 0) {
                container.innerHTML = `
                    <div class="empty-state">
                        <i class="fas fa-users"></i>
                        <h3>No teams joined yet</h3>
                        <p>Discover and join teams to start collaborating</p>
                    </div>
                `;
                return;
            }

            container.innerHTML = myTeams.map(team => `
                <div class="my-team-card">
                    <div class="my-team-header">
                        <div class="my-team-info">
                            <h3>${team.name}</h3>
                            <p class="my-team-role">Member since ${team.joinedDate}</p>
                        </div>
                        <div class="team-actions">
                            <button class="btn-secondary" onclick="openTeamChat('${team._id}')">Chat</button>
                            <button class="btn-secondary" onclick="viewTeamTasks('${team._id}')">Tasks</button>
                        </div>
                    </div>
                    <div class="my-team-stats">
                        <div class="my-team-stat">
                            <div class="my-team-stat-value">${team.assignedTasks || 0}</div>
                            <div class="my-team-stat-label">Assigned</div>
                        </div>
                        <div class="my-team-stat">
                            <div class="my-team-stat-value">${team.completedTasks || 0}</div>
                            <div class="my-team-stat-label">Completed</div>
                        </div>
                        <div class="my-team-stat">
                            <div class="my-team-stat-value">${team.memberCount || 0}</div>
                            <div class="my-team-stat-label">Members</div>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        async function loadMyTasks() {
            try {
                // TODO: Replace with actual API call
                // const response = await fetch('/api/tasks/my-tasks');
                // const data = await response.json();
                // myTasks = data.tasks;
                
                renderTasks();
            } catch (error) {
                console.error('Error loading my tasks:', error);
            }
        }

        function renderTasks() {
            const container = document.getElementById('tasksList');
            
            if (myTasks.length === 0) {
                container.innerHTML = `
                    <div class="empty-state">
                        <i class="fas fa-clipboard-list"></i>
                        <h3>No tasks assigned yet</h3>
                        <p>Join teams to get assigned tasks</p>
                    </div>
                `;
                return;
            }

            container.innerHTML = myTasks.map(task => `
                <div class="task-item">
                    <div class="task-header">
                        <h3 class="task-title">${task.title}</h3>
                        <span class="task-priority ${task.priority}">${task.priority}</span>
                    </div>
                    <p class="task-description">${task.description}</p>
                    <div class="task-meta">
                        <span class="task-due-date">
                            <i class="fas fa-calendar"></i>
                            Due: ${task.dueDate}
                        </span>
                        <div class="task-actions">
                            <button class="btn-primary btn-sm" onclick="updateTaskStatus('${task._id}', 'completed')">
                                Mark Complete
                            </button>
                            <button class="btn-secondary btn-sm" onclick="viewTaskDetails('${task._id}')">
                                Details
                            </button>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        function filterTasks(filter) {
            // TODO: Implement task filtering
            console.log('Filtering tasks by:', filter);
        }

        // Team actions
        async function requestToJoin(teamId) {
            try {
                const response = await fetch(`/api/teams/${teamId}/request-join`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        message: 'I would like to join this team.'
                    })
                });

                if (response.ok) {
                    alert('Join request sent successfully!');
                    // Refresh search results
                    await searchTeams();
                } else {
                    const error = await response.json();
                    alert(error.message || 'Error sending join request. Please try again.');
                }
            } catch (error) {
                console.error('Error requesting to join team:', error);
                alert('Error sending join request. Please try again.');
            }
        }

        async function joinTeam(teamId) {
            try {
                const response = await fetch(`/api/teams/${teamId}/join`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (response.ok) {
                    alert('Successfully joined team!');
                    // Refresh data
                    await loadDashboardData();
                    await searchTeams();
                } else {
                    const error = await response.json();
                    alert(error.message || 'Error joining team. Please try again.');
                }
            } catch (error) {
                console.error('Error joining team:', error);
                alert('Error joining team. Please try again.');
            }
        }

        async function acceptInvitation(teamId) {
            try {
                const response = await fetch(`/api/teams/${teamId}/accept-invitation`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (response.ok) {
                    alert('Invitation accepted successfully!');
                    // Refresh data
                    await loadDashboardData();
                    await searchTeams();
                } else {
                    const error = await response.json();
                    alert(error.message || 'Error accepting invitation. Please try again.');
                }
            } catch (error) {
                console.error('Error accepting invitation:', error);
                alert('Error accepting invitation. Please try again.');
            }
        }

        function viewTeamDetails(teamId) {
            // TODO: Navigate to team details page
            console.log('Viewing team details:', teamId);
        }

        function openTeamChat(teamId) {
            window.location.href = `/chat?team=${teamId}`;
        }

        function viewTeamTasks(teamId) {
            // TODO: Navigate to team tasks page
            console.log('Viewing team tasks:', teamId);
        }

        // Task actions
        async function updateTaskStatus(taskId, status) {
            try {
                // TODO: Replace with actual API call
                console.log('Updating task status:', taskId, status);
                
                // Update local data
                const task = myTasks.find(t => t._id === taskId);
                if (task) {
                    task.status = status;
                    if (status === 'completed') {
                        stats.completedTasks++;
                        stats.pendingTasks--;
                    }
                    updateStats();
                    renderTasks();
                }
                
                alert('Task status updated successfully!');
            } catch (error) {
                console.error('Error updating task status:', error);
                alert('Error updating task. Please try again.');
            }
        }

        function viewTaskDetails(taskId) {
            // TODO: Navigate to task details page
            console.log('Viewing task details:', taskId);
        }

        async function logout() {
            try {
                const response = await fetch('/api/auth/logout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (response.ok) {
                    localStorage.removeItem('user');
                    window.location.href = '/login';
                } else {
                    console.error('Logout failed');
                }
            } catch (error) {
                console.error('Logout error:', error);
            }
        }

        // Mobile menu toggle (for future implementation)
        function toggleMobileMenu() {
            document.querySelector('.sidebar').classList.toggle('mobile-open');
        }
    </script>
</body>
</html>